    # Comments in GraphQL strings (such as this one) start with the hash (#) symbol.

    # This "Book" type defines the queryable fields for every book in our data source.

    type UserBook {
      id: String!
      userId: String!
      title: String!
      description: String
    }

    input InputUserBook {
      title: String!
      description: String
    }

    enum SortDirection {
      DESC
      ASC
    } 

    input OrderBy {
      variable: String!
      direction: SortDirection!
    }

    input SelectCondition {
      limit: Int
      sort: OrderBy
    }

    type User {
      id: ID!
      email: String!
    }

    type AuthPayLoad {
      token: String
      user: User
    }

    # The "Query" type is special: it lists all of the available queries that
    # clients can execute, along with the return type for each. In this
    # case, the "books" query returns an array of zero or more Books (defined above).

    type Query {
      books(condition: SelectCondition): [UserBook]
      current: User
    }
    type Mutation {
      signup(email: String!, password: String!): AuthPayLoad
      login(email: String!, password: String!): AuthPayLoad
      oauth(email: String!, password: String!): AuthPayLoad
      addBook(book: InputUserBook!): UserBook
    }